---
terraform-common: &terraform-common
  backend_type: gcs
  env_name: development
  env:
    GOOGLE_CREDENTIALS: ((gcp_concourse_iam))
  vars:
    region: europe-west2
    zone: europe-west2-a
    project: kubernetes-cluster-eso

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest

resources:
- name: eso-infra-repo
  type: git
  icon: github
  check_every: 5m
  source:
    uri: https://github.com/EngineerBetter/eso-infrastructure.git
    username: EngineerBetterCI
    password: ((ebci_eso_github_token))
    branch: master

- name: external-secrets-trunk
  type: git
  icon: github
  check_every: 5m
  source:
    uri: https://github.com/external-secrets/external-secrets
    username: EngineerBetterCI
    password: ((ebci_eso_github_token))
    #TODO: parametrize to be utilised by multiple ESO teams
    branch: beach-team


- name: terraform-gke
  type: terraform
  icon: terraform
  source:
    <<: *terraform-common
    backend_config:
      bucket: terraform-state-eso
      prefix: terraform/state

- name: morning-trigger
  type: time
  icon: clock-outline
  source:
    start: 9:00 AM
    stop: 9:30 AM
    location: Europe/London
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

- name: evening-trigger
  type: time
  icon: clock-outline
  source:
    start: 7:00 PM
    stop: 7:30 PM
    location: Europe/London
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

- name: terraform-eso
  type: terraform
  icon: terraform
  source:
    backend_type: gcs
    env_name: development
    env:
      GOOGLE_CREDENTIALS: ((gcp_concourse_iam))
    vars:
      region: europe-west2
      zone: europe-west2-a
      project: kubernetes-cluster-eso
    backend_config:
      bucket: terraform-state-eso
      prefix: terraform/state/eso

- name: terraform-vault
  type: terraform
  icon: terraform
  source:
    <<: *terraform-common
    backend_config:
      bucket: terraform-state-eso
      prefix: terraform/state/vault

- name: eso-binary-image
  type: docker-image
  source:
    repository: europe-west2-docker.pkg.dev/kubernetes-cluster-eso/beach-team-eso/eso-binary-image
    username: _json_key
    password: ((gcp_concourse_iam))

- name: eso-docker-tag
  type: semver
  source:
    driver: gcs
    key: tags/eso-binary-image
    bucket: terraform-state-eso
    json_key: ((gcp_concourse_iam))

#----------------------------- setup ---------------------------------------------------

groups:
- name: test-build-deploy
  jobs:
  - lint
  - unit-tests
  - build
  - deploy
  - validation-tests

- name: cluster-management
  jobs:
  - spin-gke-cluster
  - destroy-gke-cluster
  - deploy-vault
  - destroy-vault

- name: setup
  jobs:
  - set-pipeline

jobs:
- name: set-pipeline
  plan:
  - get: eso-infra-repo
    trigger: true
  - set_pipeline: self
    file: eso-infra-repo/ci/eso-cd-pipeline.yml

#----------------------------- cluster management ---------------------------------------

- name: spin-gke-cluster
  plan:
  - get: eso-infra-repo
    passed: [set-pipeline]
  - get: morning-trigger
    trigger: true
  - put: terraform-gke
    params:
      terraform_source: eso-infra-repo/terraform/gke

- name: destroy-gke-cluster
  plan:
  - get: eso-infra-repo
    passed: [set-pipeline]
  - get: evening-trigger
    trigger: true
    passed: [destroy-vault]
  - get: terraform-vault
    passed: [destroy-vault]
    trigger: true
  - put: terraform-gke
    params:
      terraform_source: eso-infra-repo/terraform/gke
      action: destroy
    get_params:
      action: destroy

- name: deploy-vault
  plan:
  - in_parallel:
    - get: eso-infra-repo
      passed: [spin-gke-cluster]
    - get: terraform-gke
      passed: [spin-gke-cluster]
      trigger: true
    - put: terraform-vault
      params:
        terraform_source: eso-infra-repo/terraform/vault

- name: destroy-vault
  plan:
  - in_parallel:
    - get: eso-infra-repo
    - get: evening-trigger
      trigger: true
    - put: terraform-vault
      params:
        terraform_source: eso-infra-repo/terraform/vault
        action: destroy
      get_params:
        action: destroy

#---------------------------------- code part -------------------------------------------

- name: lint
  plan:
  - get: external-secrets-trunk
    trigger: true
  - get: eso-infra-repo
    passed: [set-pipeline]
  - task: lint-files
    file: eso-infra-repo/ci/tasks/golint.yml

- name: unit-tests
  plan:
  - get: external-secrets-trunk
    trigger: true
    passed: [lint]
  - get: eso-infra-repo
    passed: [lint]
  - task: run-unit-tests
    file: eso-infra-repo/ci/tasks/gotest.yml

- name: build
  serial: true
  plan:
  - get: eso-infra-repo
    passed: [unit-tests]
  - get: external-secrets-trunk
    trigger: true
    passed: [unit-tests]
  - get: eso-docker-tag
    params: {bump: minor}
  - task: go-build
    file: eso-infra-repo/ci/tasks/build-binary.yml
  - put: eso-binary-image
    params:
      build: external-secrets-trunk
      docker_buildkit: 1
      build_args:
        TARGETOS: linux
        TARGETARCH: amd64
      tag_file: eso-docker-tag/version
      tag_as_latest: true
    get_params: {skip_download: true}
  - put: eso-docker-tag
    params: {file: eso-docker-tag/version}

- name: deploy
  plan:
  - get: eso-docker-tag
    passed: [build]
  - get: eso-infra-repo
    passed: [build]
  - get: terraform-gke
    passed: [spin-gke-cluster]
    trigger: true
  - get: external-secrets-trunk
    trigger: true
    passed: [build]
  - task: generate-crds
    file: eso-infra-repo/ci/tasks/generate-crds.yml
  - put: terraform-eso
    params:
      terraform_source: eso-infra-repo/terraform/eso
      vars:
        helm_charts_dir: ../../../external-secrets-trunk/deploy/charts/external-secrets
        image_registry: europe-west2-docker.pkg.dev/kubernetes-cluster-eso/beach-team-eso/eso-binary-image
        version_file: ../../../eso-docker-tag/version

- name: validation-tests
  plan:
  - get: eso-infra-repo
    passed: [deploy]
  - get: external-secrets-trunk
    passed: [deploy]
    trigger: true
  - task: create-gcp-secrets
    file: eso-infra-repo/ci/tasks/create-gcp-secrets.yml
  - task: run-validation-tests
    file: eso-infra-repo/ci/tasks/validation-tests.yml

