platform: linux

image_resource:
  type: docker-image
  source:
    repository: engineerbetter/pcf-ops
    tag: latest

params:
  GOOGLE_CREDENTIALS: ((gcp_concourse_iam))
  GOOGLE_APPLICATION_CREDENTIALS: creds.json

inputs:
- name: eso-infra-repo

run:
  path: bash
  args:
  - -c
  - |
    set -euo pipefail
    export USE_GKE_GCLOUD_AUTH_PLUGIN=True

    echo "${GOOGLE_CREDENTIALS}" > ${GOOGLE_APPLICATION_CREDENTIALS}
      gcloud auth activate-service-account \
        --key-file "${GOOGLE_APPLICATION_CREDENTIALS}" \
        --project 'kubernetes-cluster-eso'

    gcloud container clusters get-credentials kubernetes-cluster-eso \
           --zone=europe-west2-a --project=kubernetes-cluster-eso
    rm ${GOOGLE_APPLICATION_CREDENTIALS}
    gcloud secrets delete foo-bar --project 'kubernetes-cluster-eso' --quiet || echo "No secrets found"
    echo "kubectl context: $(kubectl config current-context)"

    echo -e "\n>> TEST[1/7] applying manifest"
    echo "Cleaning up cluster resources (force new updates)"
    kubectl delete -f eso-infra-repo/ci/tests/online || echo "No manifests found"
    # Changing apply to respect an order
    kubectl apply -f eso-infra-repo/ci/tests/online/secret-example.yaml
    kubectl apply -f eso-infra-repo/ci/tests/online/secretstore-example.yaml
    kubectl apply -f eso-infra-repo/ci/tests/online/pushsecret-example.yaml
    kubectl apply -f eso-infra-repo/ci/tests/online/external-secret-example.yaml
    kubectl apply -f eso-infra-repo/ci/tests/online/vault-secretstore.yaml
    kubectl apply -f eso-infra-repo/ci/tests/online/vault-secret.yaml
    kubectl apply -f eso-infra-repo/ci/tests/online/vault-pushsecret.yaml

    echo -e "\n>> TEST[2/7] SecretStore Validating CAPABILITES:ReadWrite"
    set -x
    kubectl get secretstore secretstore-example |grep ReadWrite
    set +x

    echo -e "Sleeping for 5 to ensure resource creation."
    sleep 5
    
    echo -e "\n>> TEST[3/7] PushSecret Validating STATUS:Synced"
    set -x
    kubectl get pushsecret pushsecret-example |grep Synced
    set +x

    echo -e "\n>> TEST[4/7] ExternalSecret Validating STATUS:SecretSynced"
    set -x
    kubectl get externalsecret external-secret-example |grep SecretSynced
    set +x

    echo -e "\n>> TEST[5/7] New Secret has the same value as original Secret"
    set -x
    kubectl get secret external-secret-example -o yaml | grep c2VjcmV0
    set +x

    echo -e "\n>> TEST[6/7] Kubectl describe shows events"
    set -x
    kubectl describe pushsecret | grep pushsecret
    set +x

    echo -e "\n>> TEST[7/7] Kubectl describe shows vault secret"
    set -x
    kubectl describe pushsecret vault-pushsecret | grep Synced
    set +x

    echo -e "\n>> TEST[8/8] Remote secret on vault has the same value as the original local one"
    set -x
    kubectl exec -it vault-0 -- vault kv get secret/target-foobar | tail -n1 | tr -s " " | cut -d " " -f2 | grep world
    set +x
