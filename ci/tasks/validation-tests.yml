platform: linux

image_resource:
  type: docker-image
  source:
    repository: engineerbetter/pcf-ops
    tag: latest

params:    
  GOOGLE_CREDENTIALS: ((gcp_concourse_iam))
  GOOGLE_APPLICATION_CREDENTIALS: creds.json

inputs:
- name: eso-infra-repo

run:
  path: bash
  args:
  - -c
  - |
    set -euo pipefail
    export USE_GKE_GCLOUD_AUTH_PLUGIN=True

    echo "${GOOGLE_CREDENTIALS}" > ${GOOGLE_APPLICATION_CREDENTIALS}
      gcloud auth activate-service-account \
        --key-file "${GOOGLE_APPLICATION_CREDENTIALS}" \
        --project 'kubernetes-cluster-eso'

    gcloud container clusters get-credentials kubernetes-cluster-eso \
           --zone=europe-west2-a --project=kubernetes-cluster-eso
    rm ${GOOGLE_APPLICATION_CREDENTIALS}
    echo "kubectl context: $(kubectl config current-context)"
    
    echo -e "\n>> TEST[1/5] applying manifests"

    YAML_TEST_FILE=$(ls eso-infra-repo/ci/tests/*.yaml);
    for TEST in $YAML_TEST_FILE; do
       echo "Applying kubectl for $TEST"
       kubectl apply -f $TEST
       echo
    done

    echo -e "\n>> TEST[2/5] SecretStore Validating CAPABILITES:ReadOnly"
    set -x
    kubectl get secretstore secretstore-sample |grep ReadOnly
    set +x
    
    echo -e "\n>> TEST[3/5] SecretSink Validating STATUS:SecretSyncFailed"
    set -x
    kubectl get secretsink secret-sink-example |grep SecretSyncFailed
    set +x

    echo -e "\n>> TEST[4/5] ExternalSecret Validating STATUS:SecretSynced"
    set -x
    kubectl get externalsecret external-secret-example |grep SecretSynced
    set +x

    echo -e "\n>> TEST[5/5] Secret Validating DATA:1"
    set -x
    kubectl get secret secret-example |grep 1
    set +x